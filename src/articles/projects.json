{
  "Articles": [
    {
      "title": "My first Website!",
      "date": "April 7, 2014",
      "summary": "Here is a summary for my website!",
      "text": "<div class=\"ext\">Hello!</div>"
    },
    {
      "title": "Here is another post",
      "date": "April 7, 2014",
      "summary": "Here is another summary for my website!",
      "text": "<div class=\"ext\">Hello!</div><div class=\"ext\">Hello!</div> <h1>BOSS</h1>"
    },
    {
      "title": "Test Script",
      "date": "April 7, 2014",
      "summary": "This is just a test of upload capabilities",
      "text": "<h1>Welcome to my website!</h1>\n\n<h2>About Me</h2>\n\n<p>My name is Evan Putnam.  I am a Software Developer passionate about the Aerospace industry.</p>\n\n<h2>Skills</h2>\n\n<p>C/C++, Python, Agile, DevOps, etc.</p>\n\n<h2>Purpose</h2>\n\n<p>This is really just an example page.  Here is some python code!</p>\n\n<pre><code>import math  \nx = math.sqrt()  \nprint(x * 3)  \n</code></pre>\n\n<p>Steely eyed missile man</p>\n\n<p><img src=\"images/danger.png\" alt=\"Image of DANGER ZONE\" /></p>\n"
    },
    {
      "title": "How This Website Was Made",
      "date": "04/06/2020",
      "summary": "Want to see how I made this website?  Come on down!",
      "text": "<p>I was debating calling this article \"Making a blog without server side code\"...</p>\n\n<h2>Technology</h2>\n\n<ul>\n<li>React for generating UI elements (Really the backbone of the whole operation).</li>\n<li>Python for some utility files</li>\n<li>Markdown files for articles</li>\n</ul>\n\n<h2>Blogging</h2>\n\n<p>The blog items are just really REACT components with text being read in from a JSON file.  That master JSON file has a few tags that are populated.  The code for it is pretty simple.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kr\">import</span> <span class=\"nx\">React</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;react&#39;</span><span class=\"p\">;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">ReactDOM</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;react-dom&#39;</span><span class=\"p\">;</span>\n<span class=\"kr\">import</span> <span class=\"s1\">&#39;./index.css&#39;</span><span class=\"p\">;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">MAX_ARTICLES_PER_PAGE</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">loadedArticles</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">&quot;./articles/projects.json&quot;</span><span class=\"p\">)</span>\n\n<span class=\"kd\">var</span> <span class=\"nx\">articleCount</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n\n<span class=\"kr\">class</span> <span class=\"nx\">Article</span> <span class=\"kr\">extends</span> <span class=\"nx\">React</span><span class=\"p\">.</span><span class=\"nx\">Component</span> <span class=\"p\">{</span>\n    <span class=\"nx\">constructor</span> <span class=\"p\">(</span><span class=\"nx\">props</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"kr\">super</span><span class=\"p\">(</span><span class=\"nx\">props</span><span class=\"p\">);</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleClick</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleClick</span><span class=\"p\">.</span><span class=\"nx\">bind</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nx\">render</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;Article article_block&quot;</span><span class=\"o\">&gt;</span>\n                <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-card-4 w3-margin w3-white&quot;</span><span class=\"o\">&gt;</span>\n                    <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-container&quot;</span><span class=\"o\">&gt;</span>\n                        <span class=\"o\">&lt;</span><span class=\"nx\">h3</span><span class=\"o\">&gt;&lt;</span><span class=\"nx\">b</span><span class=\"o\">&gt;</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">article</span><span class=\"p\">[</span><span class=\"s1\">&#39;title&#39;</span><span class=\"p\">]}</span><span class=\"o\">&lt;</span><span class=\"err\">/b&gt;&lt;/h3&gt;</span>\n                        <span class=\"o\">&lt;</span><span class=\"nx\">h5</span><span class=\"o\">&gt;&lt;</span><span class=\"nx\">span</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-opacity&quot;</span><span class=\"o\">&gt;</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">article</span><span class=\"p\">[</span><span class=\"s1\">&#39;date&#39;</span><span class=\"p\">]}</span><span class=\"o\">&lt;</span><span class=\"err\">/span&gt;&lt;/h5&gt;</span>\n                    <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n                    <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-container&quot;</span><span class=\"o\">&gt;</span>\n                        <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">dangerouslySetInnerHTML</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"p\">{</span><span class=\"nx\">__html</span><span class=\"o\">:</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">article</span><span class=\"p\">[</span><span class=\"s1\">&#39;text&#39;</span><span class=\"p\">]}</span> <span class=\"p\">}</span><span class=\"o\">&gt;&lt;</span><span class=\"err\">/div&gt;</span>\n                        <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-row&quot;</span><span class=\"o\">&gt;</span>\n                            <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-col m8 s12&quot;</span><span class=\"o\">&gt;</span>\n                            <span class=\"o\">&lt;</span><span class=\"nx\">p</span><span class=\"o\">&gt;&lt;</span><span class=\"nx\">button</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-button w3-padding-large w3-white w3-border&quot;</span> <span class=\"nx\">onClick</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleClick</span><span class=\"p\">}</span><span class=\"o\">&gt;&lt;</span><span class=\"nx\">b</span><span class=\"o\">&gt;</span><span class=\"nx\">\u00c2</span><span class=\"err\">\u00ab</span> <span class=\"nx\">BACK</span><span class=\"o\">&lt;</span><span class=\"err\">/b&gt;&lt;/button&gt;&lt;/p&gt;</span>\n                            <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n                        <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n                    <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n                <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n                <span class=\"o\">&lt;</span><span class=\"nx\">hr</span><span class=\"o\">/&gt;</span>\n            <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n        <span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nx\">handleClick</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"nx\">ReactDOM</span><span class=\"p\">.</span><span class=\"nx\">render</span><span class=\"p\">(</span>\n            <span class=\"o\">&lt;</span><span class=\"nx\">RelevantArticleContainer</span> <span class=\"o\">/&gt;</span><span class=\"p\">,</span>\n            <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s1\">&#39;articlePosts&#39;</span><span class=\"p\">)</span>\n        <span class=\"p\">);</span>\n        <span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">scroll</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kr\">class</span> <span class=\"nx\">ArticleSummarySection</span> <span class=\"kr\">extends</span> <span class=\"nx\">React</span><span class=\"p\">.</span><span class=\"nx\">Component</span> <span class=\"p\">{</span>\n\n    <span class=\"nx\">constructor</span> <span class=\"p\">(</span><span class=\"nx\">props</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"kr\">super</span><span class=\"p\">(</span><span class=\"nx\">props</span><span class=\"p\">);</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleClick</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleClick</span><span class=\"p\">.</span><span class=\"nx\">bind</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">);</span>\n\n    <span class=\"p\">}</span>\n\n    <span class=\"nx\">render</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;Article-Summary&quot;</span><span class=\"o\">&gt;</span>\n                <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-card-4 w3-margin w3-white&quot;</span><span class=\"o\">&gt;</span>\n                    <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-container&quot;</span><span class=\"o\">&gt;</span>\n                        <span class=\"o\">&lt;</span><span class=\"nx\">h3</span><span class=\"o\">&gt;&lt;</span><span class=\"nx\">b</span><span class=\"o\">&gt;</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">article</span><span class=\"p\">[</span><span class=\"s1\">&#39;title&#39;</span><span class=\"p\">]}</span><span class=\"o\">&lt;</span><span class=\"err\">/b&gt;&lt;/h3&gt;</span>\n                        <span class=\"o\">&lt;</span><span class=\"nx\">h5</span><span class=\"o\">&gt;&lt;</span><span class=\"nx\">span</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-opacity&quot;</span><span class=\"o\">&gt;</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">article</span><span class=\"p\">[</span><span class=\"s1\">&#39;date&#39;</span><span class=\"p\">]}</span><span class=\"o\">&lt;</span><span class=\"err\">/span&gt;&lt;/h5&gt;</span>\n                    <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n                    <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-container&quot;</span><span class=\"o\">&gt;</span>\n                        <span class=\"o\">&lt;</span><span class=\"nx\">p</span><span class=\"o\">&gt;</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">article</span><span class=\"p\">[</span><span class=\"s1\">&#39;summary&#39;</span><span class=\"p\">]}</span><span class=\"o\">&lt;</span><span class=\"err\">/p&gt;</span>\n                        <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-row&quot;</span><span class=\"o\">&gt;</span>\n                            <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-col m8 s12&quot;</span><span class=\"o\">&gt;</span>\n                            <span class=\"o\">&lt;</span><span class=\"nx\">p</span><span class=\"o\">&gt;&lt;</span><span class=\"nx\">button</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-button w3-padding-large w3-white w3-border&quot;</span> <span class=\"nx\">onClick</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleClick</span><span class=\"p\">}</span><span class=\"o\">&gt;&lt;</span><span class=\"nx\">b</span><span class=\"o\">&gt;</span><span class=\"nx\">READ</span> <span class=\"nx\">MORE</span> <span class=\"nx\">\u00c2</span><span class=\"err\">\u00bb</span><span class=\"o\">&lt;</span><span class=\"err\">/b&gt;&lt;/button&gt;&lt;/p&gt;</span>\n                            <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n                        <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n                    <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n                <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n                <span class=\"o\">&lt;</span><span class=\"nx\">hr</span><span class=\"o\">/&gt;</span>\n            <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n        <span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nx\">handleClick</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"kr\">const</span> <span class=\"nx\">properties</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">article</span><span class=\"p\">;</span>\n        <span class=\"nx\">ReactDOM</span><span class=\"p\">.</span><span class=\"nx\">render</span><span class=\"p\">(</span>\n            <span class=\"o\">&lt;</span><span class=\"nx\">Article</span> <span class=\"nx\">article</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">properties</span><span class=\"p\">}</span> <span class=\"o\">/&gt;</span><span class=\"p\">,</span>\n            <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s1\">&#39;articlePosts&#39;</span><span class=\"p\">)</span>\n        <span class=\"p\">);</span>\n        <span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">scroll</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kr\">class</span> <span class=\"nx\">RelevantArticleContainer</span> <span class=\"kr\">extends</span> <span class=\"nx\">React</span><span class=\"p\">.</span><span class=\"nx\">Component</span> <span class=\"p\">{</span>\n    <span class=\"nx\">render</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"kd\">var</span> <span class=\"nx\">listItems</span> <span class=\"o\">=</span> <span class=\"nx\">loadedArticles</span><span class=\"p\">[</span><span class=\"s2\">&quot;Articles&quot;</span><span class=\"p\">].</span><span class=\"nx\">map</span><span class=\"p\">((</span><span class=\"nx\">article</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span>\n            <span class=\"o\">&lt;</span><span class=\"nx\">ArticleSummarySection</span> <span class=\"nx\">article</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">article</span><span class=\"p\">}</span> <span class=\"nx\">key</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">article</span><span class=\"p\">.</span><span class=\"nx\">title</span><span class=\"p\">}</span><span class=\"o\">/&gt;</span>\n        <span class=\"p\">);</span>\n        <span class=\"nx\">listItems</span><span class=\"p\">.</span><span class=\"nx\">reverse</span><span class=\"p\">();</span>\n\n        <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"nx\">MAX_ARTICLES_PER_PAGE</span> <span class=\"o\">*</span> <span class=\"nx\">articleCount</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"nx\">listItems</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nx\">articleCount</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n        <span class=\"p\">}</span> \n        <span class=\"kr\">const</span> <span class=\"nx\">elemsLeft</span> <span class=\"o\">=</span> <span class=\"nx\">listItems</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"nx\">MAX_ARTICLES_PER_PAGE</span> <span class=\"o\">*</span> <span class=\"nx\">articleCount</span><span class=\"p\">)</span>\n        <span class=\"kr\">const</span> <span class=\"nx\">startingIndex</span> <span class=\"o\">=</span> <span class=\"nx\">MAX_ARTICLES_PER_PAGE</span> <span class=\"o\">*</span> <span class=\"nx\">articleCount</span>\n\n        <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">elemsLeft</span> <span class=\"o\">&gt;</span> <span class=\"nx\">MAX_ARTICLES_PER_PAGE</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nx\">listItems</span> <span class=\"o\">=</span> <span class=\"nx\">listItems</span><span class=\"p\">.</span><span class=\"nx\">slice</span><span class=\"p\">(</span><span class=\"nx\">startingIndex</span><span class=\"p\">,</span> <span class=\"nx\">startingIndex</span> <span class=\"o\">+</span> <span class=\"nx\">MAX_ARTICLES_PER_PAGE</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n            <span class=\"nx\">listItems</span> <span class=\"o\">=</span> <span class=\"nx\">listItems</span><span class=\"p\">.</span><span class=\"nx\">slice</span><span class=\"p\">(</span><span class=\"nx\">startingIndex</span><span class=\"p\">,</span> <span class=\"nx\">startingIndex</span> <span class=\"o\">+</span> <span class=\"nx\">elemsLeft</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;Article-Summary-Container&quot;</span><span class=\"o\">&gt;</span>\n                <span class=\"p\">{</span><span class=\"nx\">listItems</span><span class=\"p\">}</span>\n                <span class=\"o\">&lt;</span><span class=\"nx\">button</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-button w3-padding-large w3-white w3-border&quot;</span> <span class=\"nx\">onClick</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleBackward</span><span class=\"p\">}</span><span class=\"o\">&gt;&lt;</span><span class=\"nx\">b</span><span class=\"o\">&gt;</span><span class=\"nx\">\u00c2</span><span class=\"err\">\u00ab</span> <span class=\"nx\">PREV</span><span class=\"o\">&lt;</span><span class=\"err\">/b&gt;&lt;/button&gt;</span>\n                <span class=\"o\">&lt;</span><span class=\"nx\">button</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-button w3-padding-large w3-white w3-border&quot;</span> <span class=\"nx\">onClick</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleForward</span><span class=\"p\">}</span><span class=\"o\">&gt;&lt;</span><span class=\"nx\">b</span><span class=\"o\">&gt;</span><span class=\"nx\">NEXT</span> <span class=\"nx\">\u00c2</span><span class=\"err\">\u00bb</span><span class=\"o\">&lt;</span><span class=\"err\">/b&gt;&lt;/button&gt;</span>\n            <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n        <span class=\"p\">);</span>\n    <span class=\"p\">};</span>\n\n    <span class=\"nx\">handleForward</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"nx\">articleCount</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"nx\">ReactDOM</span><span class=\"p\">.</span><span class=\"nx\">render</span><span class=\"p\">(</span>\n            <span class=\"o\">&lt;</span><span class=\"nx\">RelevantArticleContainer</span> <span class=\"o\">/&gt;</span><span class=\"p\">,</span>\n            <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s1\">&#39;articlePosts&#39;</span><span class=\"p\">)</span>\n        <span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nx\">handleBackward</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">articleCount</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nx\">articleCount</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n        <span class=\"p\">}</span>\n        <span class=\"nx\">ReactDOM</span><span class=\"p\">.</span><span class=\"nx\">render</span><span class=\"p\">(</span>\n            <span class=\"o\">&lt;</span><span class=\"nx\">RelevantArticleContainer</span> <span class=\"o\">/&gt;</span><span class=\"p\">,</span>\n            <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s1\">&#39;articlePosts&#39;</span><span class=\"p\">)</span>\n        <span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"kr\">class</span> <span class=\"nx\">PopularPost</span> <span class=\"kr\">extends</span> <span class=\"nx\">React</span><span class=\"p\">.</span><span class=\"nx\">Component</span> <span class=\"p\">{</span>\n\n    <span class=\"nx\">constructor</span> <span class=\"p\">(</span><span class=\"nx\">props</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"kr\">super</span><span class=\"p\">(</span><span class=\"nx\">props</span><span class=\"p\">);</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleClick</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleClick</span><span class=\"p\">.</span><span class=\"nx\">bind</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nx\">render</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;Popular-Post&quot;</span><span class=\"o\">&gt;</span>\n                <span class=\"o\">&lt;</span><span class=\"nx\">button</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;popular_button&quot;</span> <span class=\"nx\">onClick</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleClick</span><span class=\"p\">}</span><span class=\"o\">&gt;</span>\n                    <span class=\"o\">&lt;</span><span class=\"nx\">ul</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-ul w3-hoverable w3-white&quot;</span><span class=\"o\">&gt;</span>\n                        <span class=\"o\">&lt;</span><span class=\"nx\">li</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-padding-16&quot;</span><span class=\"o\">&gt;</span>\n                            <span class=\"o\">&lt;</span><span class=\"nx\">span</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;w3-large&quot;</span><span class=\"o\">&gt;</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">article</span><span class=\"p\">.</span><span class=\"nx\">title</span><span class=\"p\">}</span><span class=\"o\">&lt;</span><span class=\"sr\">/span&gt;&lt;br/</span><span class=\"o\">&gt;</span>\n                            <span class=\"o\">&lt;</span><span class=\"nx\">span</span><span class=\"o\">&gt;</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">article</span><span class=\"p\">.</span><span class=\"nx\">date</span><span class=\"p\">}</span><span class=\"o\">&lt;</span><span class=\"err\">/span&gt;</span>\n                        <span class=\"o\">&lt;</span><span class=\"err\">/li&gt;</span>\n                    <span class=\"o\">&lt;</span><span class=\"err\">/ul&gt;</span>\n                <span class=\"o\">&lt;</span><span class=\"err\">/button&gt;</span>\n            <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n        <span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nx\">handleClick</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"kr\">const</span> <span class=\"nx\">properties</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">article</span><span class=\"p\">;</span>\n        <span class=\"nx\">ReactDOM</span><span class=\"p\">.</span><span class=\"nx\">render</span><span class=\"p\">(</span>\n            <span class=\"o\">&lt;</span><span class=\"nx\">Article</span> <span class=\"nx\">article</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">properties</span><span class=\"p\">}</span> <span class=\"o\">/&gt;</span><span class=\"p\">,</span>\n            <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s1\">&#39;articlePosts&#39;</span><span class=\"p\">)</span>\n        <span class=\"p\">);</span>\n        <span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">scroll</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kr\">class</span> <span class=\"nx\">PopularPosts</span> <span class=\"kr\">extends</span> <span class=\"nx\">React</span><span class=\"p\">.</span><span class=\"nx\">Component</span> <span class=\"p\">{</span>\n    <span class=\"nx\">render</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"kd\">var</span> <span class=\"nx\">listItems</span> <span class=\"o\">=</span> <span class=\"nx\">loadedArticles</span><span class=\"p\">[</span><span class=\"s2\">&quot;Articles&quot;</span><span class=\"p\">].</span><span class=\"nx\">map</span><span class=\"p\">((</span><span class=\"nx\">article</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span>\n            <span class=\"o\">&lt;</span><span class=\"nx\">ArticleSummarySection</span> <span class=\"nx\">article</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">article</span><span class=\"p\">}</span> <span class=\"nx\">key</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">article</span><span class=\"p\">.</span><span class=\"nx\">title</span><span class=\"p\">}</span><span class=\"o\">/&gt;</span>\n        <span class=\"p\">);</span>\n        <span class=\"nx\">listItems</span><span class=\"p\">.</span><span class=\"nx\">reverse</span><span class=\"p\">();</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"s2\">&quot;Popular-Posts&quot;</span><span class=\"o\">&gt;</span>\n                <span class=\"o\">&lt;</span><span class=\"nx\">PopularPost</span>  <span class=\"nx\">article</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">listItems</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">article</span><span class=\"p\">}</span> <span class=\"o\">/&gt;</span>\n                <span class=\"o\">&lt;</span><span class=\"nx\">PopularPost</span>  <span class=\"nx\">article</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">listItems</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">].</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">article</span><span class=\"p\">}</span> <span class=\"o\">/&gt;</span>\n            <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n        <span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n\n\n\n<span class=\"nx\">articleCount</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"nx\">ReactDOM</span><span class=\"p\">.</span><span class=\"nx\">render</span><span class=\"p\">(</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">RelevantArticleContainer</span> <span class=\"o\">/&gt;</span><span class=\"p\">,</span>\n    <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s1\">&#39;articlePosts&#39;</span><span class=\"p\">)</span>\n<span class=\"p\">);</span>\n\n<span class=\"nx\">ReactDOM</span><span class=\"p\">.</span><span class=\"nx\">render</span><span class=\"p\">(</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">PopularPosts</span> <span class=\"o\">/&gt;</span><span class=\"p\">,</span>\n    <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s1\">&#39;popularPosts&#39;</span><span class=\"p\">)</span>\n<span class=\"p\">);</span>\n</code></pre></div>\n\n<p>There is also some logic in here to completely handle the max number of items on a given page.</p>\n\n<h3>Python</h3>\n\n<p>For actually writing the posts I just use markdown.  Its super simple and is easily converted to html using libraries found online.  To convert the files and add them to the json list I made a quick python utility file that does the following:</p>\n\n<ol>\n<li>Converts the input markdown file to html and adds an entry to the json object.</li>\n<li>Moves any new images in the images folder over to the src folder.</li>\n<li>Rebuilds the application with the new images and json file.</li>\n<li>Pushes off to github with a commit message detailing article name.</li>\n</ol>\n\n<p>For those interested it looks like this:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">markdown2</span>\n<span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n<span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">import</span> <span class=\"nn\">shutil</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">1. Converts the input markdown file to html and adds an entry to the json object.</span>\n<span class=\"sd\">2. Moves any new images in the images folder over to the src folder.</span>\n<span class=\"sd\">3. Rebuilds the application with the new images and json file.</span>\n<span class=\"sd\">4. Pushes off to github with a commit message detailing article name.</span>\n<span class=\"sd\">&#39;&#39;&#39;</span>\n\n<span class=\"c1\"># ###########################################################</span>\n<span class=\"c1\"># Description:      Converts a markdown file to html and</span>\n<span class=\"c1\">#                   returns it as a string.</span>\n<span class=\"c1\"># ###########################################################</span>\n<span class=\"k\">def</span> <span class=\"nf\">convert_file_to_html</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">):</span>\n    <span class=\"n\">str_to_read</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fle</span><span class=\"p\">:</span>\n        <span class=\"n\">str_to_read</span> <span class=\"o\">=</span> <span class=\"n\">fle</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n    <span class=\"n\">str_to_write</span> <span class=\"o\">=</span> <span class=\"n\">markdown2</span><span class=\"o\">.</span><span class=\"n\">markdown</span><span class=\"p\">(</span><span class=\"n\">str_to_read</span><span class=\"p\">,</span> <span class=\"n\">extras</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;fenced-code-blocks&quot;</span><span class=\"p\">])</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">str_to_write</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">str_to_write</span>\n\n<span class=\"c1\"># ###########################################################</span>\n<span class=\"c1\"># Description:      Manipulates the .json file that acts</span>\n<span class=\"c1\">#                   as the database.</span>\n<span class=\"c1\"># ###########################################################</span>\n<span class=\"k\">def</span> <span class=\"nf\">alter_json_file</span><span class=\"p\">(</span><span class=\"n\">json_file_path</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"n\">summary</span><span class=\"p\">,</span> <span class=\"n\">html_text</span><span class=\"p\">,</span> <span class=\"n\">replace</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">tag</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Articles&quot;</span><span class=\"p\">):</span>\n\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">json_file_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r+&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fle</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Load our magic json file</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">fle</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># If we are editing/replacing our information then do this.</span>\n        <span class=\"k\">if</span> <span class=\"n\">replace</span><span class=\"p\">:</span>\n            <span class=\"n\">found</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n            <span class=\"c1\"># Just do a simple linear search.  Never going to get to the point where this is an issue.</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">tag</span><span class=\"p\">])):</span>\n                <span class=\"k\">if</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">tag</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"s1\">&#39;title&#39;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">title</span><span class=\"p\">:</span>\n                    <span class=\"n\">found</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                    <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">tag</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"s1\">&#39;summary&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">summary</span>\n                    <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">tag</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"s1\">&#39;text&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">html_text</span>\n\n            <span class=\"c1\"># Raise a simple exception if you try to replace a json title that does not exist.</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">found</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s2\">&quot;Trying to replace with a title that does not exist.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Otherwise just write a new entry to the data dictionary, push out to file.</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">date</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;%m/</span><span class=\"si\">%d</span><span class=\"s2\">/%Y&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">new_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;title&quot;</span><span class=\"p\">:</span> <span class=\"n\">title</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;date&quot;</span><span class=\"p\">:</span> <span class=\"n\">date</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;summary&quot;</span><span class=\"p\">:</span> <span class=\"n\">summary</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;text&quot;</span><span class=\"p\">:</span> <span class=\"n\">html_text</span>\n            <span class=\"p\">}</span>\n            <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">tag</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">new_dict</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Write on out!</span>\n        <span class=\"n\">fle</span><span class=\"o\">.</span><span class=\"n\">seek</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">fle</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># ###########################################################</span>\n<span class=\"c1\"># Description:      Super primative function that copies all</span>\n<span class=\"c1\">#                   files over from the image folder in the </span>\n<span class=\"c1\">#                   specified markdown directory.</span>\n<span class=\"c1\"># ###########################################################</span>\n<span class=\"k\">def</span> <span class=\"nf\">copy_over_images</span><span class=\"p\">(</span><span class=\"n\">source_folder</span><span class=\"p\">,</span> <span class=\"n\">destination_folder</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">dirs</span><span class=\"p\">,</span> <span class=\"n\">files</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">walk</span><span class=\"p\">(</span><span class=\"n\">source_folder</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">fle</span> <span class=\"ow\">in</span> <span class=\"n\">files</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">destination_folder</span><span class=\"p\">,</span> <span class=\"n\">fle</span><span class=\"p\">)):</span>\n                <span class=\"n\">shutil</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">source_folder</span><span class=\"p\">,</span> <span class=\"n\">fle</span><span class=\"p\">),</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">destination_folder</span><span class=\"p\">,</span> <span class=\"n\">fle</span><span class=\"p\">))</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;WARNING: Not copying as &quot;</span> <span class=\"o\">+</span> <span class=\"n\">fle</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; already exists in destination folder.&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># ###########################################################</span>\n<span class=\"c1\"># Description:      Builds the application with NPM.</span>\n<span class=\"c1\"># ###########################################################</span>\n<span class=\"k\">def</span> <span class=\"nf\">build_application</span><span class=\"p\">(</span><span class=\"n\">base_dir</span><span class=\"p\">):</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">chdir</span><span class=\"p\">(</span><span class=\"n\">base_dir</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/../&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">(</span><span class=\"s2\">&quot;npm run build&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># ###########################################################</span>\n<span class=\"c1\"># Description:      Does all the git needed to push it off.</span>\n<span class=\"c1\"># ###########################################################</span>\n<span class=\"k\">def</span> <span class=\"nf\">git_commit_and_push</span><span class=\"p\">(</span><span class=\"n\">base_dir</span><span class=\"p\">,</span> <span class=\"n\">commit_message</span><span class=\"p\">):</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">chdir</span><span class=\"p\">(</span><span class=\"n\">base_dir</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/../&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">(</span><span class=\"s2\">&quot;git add *&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">(</span><span class=\"s2\">&quot;git commit -m </span><span class=\"se\">\\&quot;</span><span class=\"s2\">&quot;</span> <span class=\"o\">+</span> <span class=\"n\">commit_message</span> <span class=\"o\">+</span>  <span class=\"s2\">&quot;</span><span class=\"se\">\\&quot;</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">(</span><span class=\"s2\">&quot;git push&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># ###########################################################</span>\n<span class=\"c1\"># Description:      Helper function for boolean values in</span>\n<span class=\"c1\">#                   arguments.</span>\n<span class=\"c1\"># ###########################################################</span>\n<span class=\"k\">def</span> <span class=\"nf\">_bool_argument</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">val</span>\n    <span class=\"k\">elif</span> <span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;true&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;t&quot;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;yes&#39;</span><span class=\"p\">]:</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n    <span class=\"k\">elif</span> <span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;false&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;f&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;no&#39;</span><span class=\"p\">]:</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentTypeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;This field expects a boolean.&quot;</span><span class=\"p\">)</span>\n\n\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># Specify arguments</span>\n    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">(</span><span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Converts markdown to html and pushes new build to site.&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;input&quot;</span><span class=\"p\">,</span> <span class=\"n\">help</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Path to markdown file.&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;-n&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;--name&quot;</span><span class=\"p\">,</span> <span class=\"n\">help</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Name of article.&quot;</span><span class=\"p\">,</span> <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;-s&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;--summary&quot;</span><span class=\"p\">,</span> <span class=\"n\">help</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Summary of article.&quot;</span><span class=\"p\">,</span> <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s1\">&#39;-u&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;--update_only&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"n\">_bool_argument</span><span class=\"p\">,</span> <span class=\"n\">help</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;If we only want to build.&quot;</span><span class=\"p\">,</span> <span class=\"n\">default</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;-r&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;--replace&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"n\">_bool_argument</span><span class=\"p\">,</span> <span class=\"n\">help</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Replace article information.&quot;</span><span class=\"p\">,</span> <span class=\"n\">default</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Parse arguments</span>\n    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Convert to HTML and add to json.</span>\n    <span class=\"n\">html</span> <span class=\"o\">=</span> <span class=\"n\">convert_file_to_html</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">input</span><span class=\"p\">)</span>\n    <span class=\"n\">alter_json_file</span><span class=\"p\">(</span><span class=\"s2\">&quot;../src/articles/projects.json&quot;</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">,</span> <span class=\"n\">html</span><span class=\"p\">,</span> <span class=\"n\">replace</span> <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Get image path from markdown files</span>\n    <span class=\"n\">md_image_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">input</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/images&quot;</span>\n\n    <span class=\"c1\"># Copy over the images to the folder that includes items.</span>\n    <span class=\"n\">copy_over_images</span><span class=\"p\">(</span><span class=\"n\">md_image_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;../public/images&quot;</span><span class=\"p\">)</span>\n\n\n    <span class=\"k\">if</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">update_only</span> <span class=\"o\">==</span> <span class=\"kc\">False</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Build the application with NPM!</span>\n        <span class=\"n\">base_dir</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">()</span>\n        <span class=\"n\">build_application</span><span class=\"p\">(</span><span class=\"n\">base_dir</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Commit and push!</span>\n        <span class=\"n\">commit_message</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Committing article &quot;</span> <span class=\"o\">+</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">name</span>\n        <span class=\"n\">git_commit_and_push</span><span class=\"p\">(</span><span class=\"n\">base_dir</span><span class=\"p\">,</span> <span class=\"n\">commit_message</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>The script itself is pretty straighforward.  It relies on there being some arbitrary markdown folder, with an images folder inside of it.  The user can upload new articles, change existing ones, and its as simple as changing the arguments.  I have also included a .bat file for Windows computers that can just change the variables.</p>\n\n<pre><code>@echo OFF\n\nREM Specify the file name.\nSET FILE_PATH=../markdown/how_its_made_1.md\n\nREM Specify the title\nSET ARTICLE_TITLE=How This Website Was Made\n\nREM Specify the summary of the file.\nSET ARTICLE_SUMMARY=Want to see how I made this website?  Come on down!\n\nREM If you only want to update the .json file\nSET UPDATE_ONLY=True\n\nREM If you want to replace in the json file instead of writing a new article every time (Basically edit mode)\nSET REPLACE_IN_JSON=True\n\nREM Make the call!\npython generate_article.py -n \"%ARTICLE_TITLE%\" -s \"%ARTICLE_SUMMARY%\" -u \"%UPDATE_ONLY%\" -r \"%REPLACE_IN_JSON%\" \"%FILE_PATH%\"\n\nREM Does not close out so that we can tell if anything crashed.\npause\n</code></pre>\n\n<h1>Code Highlighting:</h1>\n\n<p>The markdown2 plugin has the ability to generate html code with highlight rules (The python library Pygments must be installed via pip).\nThen all you need to do is generate the .css file you want for your styling and customize the css classes.</p>\n\n<p>Click <a href=\"https://github.com/trentm/python-markdown2/wiki/fenced-code-blocks\">this link</a> if you want to see how its done.</p>\n"
    }
  ]
}